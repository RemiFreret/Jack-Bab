<?php

namespace JBBundle\Repository;

/**
 * CommandeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommandeRepository extends \Doctrine\ORM\EntityRepository
{
    public function findByDay(\Datetime $date){
        $from = new \DateTime($date->format("Y-m-d")." 00:00:00");
        $to   = new \DateTime($date->format("Y-m-d")." 23:59:59");

        $qb = $this->createQueryBuilder("e");
        $qb
            ->andWhere('e.dateRetrait BETWEEN :from AND :to')
            ->setParameter('from', $from )
            ->setParameter('to', $to)
        ;
        return $qb -> getQuery()->getResult();
    }

    public function findByMonth($year = null, $month = null){
        $toYear = false;
        if ($month === null) {
            $month = "01";
            $toYear = true;
        }

        $startDate = new \DateTime("$year-$month-01 00:00:00");
        $endDate = new \DateTime("$year-$month-01 00:00:00");
        if($toYear){
            $endDate = $endDate->modify('last month of this year')->setTime(23, 59, 59);
        }
        $endDate = $endDate->modify('last day of this month')->setTime(23, 59, 59);

        $qb = $this->createQueryBuilder('object');
        $qb->where('object.dateRetrait BETWEEN :start AND :end');
        $qb->setParameter('start', $startDate);
        $qb->setParameter('end', $endDate);

        return $qb->getQuery()->getResult();
    }

    public function findNext(){
        $date = new \DateTime;
        $now = $date -> sub(\DateInterval::createFromDateString('3600 seconds'));
        $date = new \DateTime;
        $next = $date -> add(\DateInterval::createFromDateString('7200 seconds'));

        $qb = $this->createQueryBuilder("e");
        $qb
            ->andWhere('e.dateRetrait BETWEEN :from AND :to')
            ->setParameter('from', $now )
            ->setParameter('to', $next)
            ->orderBy('e.dateRetrait','ASC')
        ;
        return $qb -> getQuery()->getResult();
    }
}
